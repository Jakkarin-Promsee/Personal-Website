<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Day Selector</title>
  <!-- Bootstrap 5 CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    .sticky-top-customss {
      position: sticky;
      top: 0;
      z-index: 1030;
      /* Ensure it's above the dropdown */
      background-color: #f8f9fa;
      /* Sticky header background */
      padding: 10px;
    }
  </style>
</head>

<body>
  <!-- Header of Custom Day Button -->
  <div class="d-flex justify-content-between text-center">
    <button type="button" class="btn btn-success btn-sm w-100 me-1 fs-6 custom-text" data-bs-toggle="modal" data-bs-target="#addNewData">
      Add new task
    </button>
  </div>

  <!-- Modal for Selecting Custom Day -->
  <div class="modal fade" id="addNewData" tabindex="-1" aria-labelledby="customDayModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">

        <div class="modal-header">
          <h5 class="modal-title" id="customDayModalLabel">Add New Task</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>

        <form id="taskForm">
          <div class="modal-body">
            <!-- Date Field -->
            <div class="mb-3">
              <label class="form-label" for="taskDate">Date:</label>
              <input type="date" value="2023-09-27" required class="form-control" id="taskDate">
            </div>

            <!-- Plan Detail Field -->
            <div class="mb-3 ">
              <label class="form-label" for="planDetail">Plan Detail:</label>
              <input type="text" required class="form-control" id="planDetail">
            </div>

            <!-- Time Range Fields -->
            <div class="d-flex justify-content-between mb-3">
              <div class="w-100">
                <label class="form-label" for="startTime">Time:</label>
                <input type="time" class="form-control" id="startTime">
              </div>
              <div class="mx-1"></div>
              <div class="w-100">
                <label class="form-label" for="endTime">To:</label>
                <input type="time" class="form-control" id="endTime">
              </div>
            </div>

            <!-- Priority Select -->
            <div class="mb-3 w-100">
              <label class="form-label" for="inputPrioritySelect">Priority:</label>
              <select class="custom-select form-control" id="inputPrioritySelect">
                <option selected>Choose...</option>
                <option value="0">Q1: Urgent and important</option>
                <option value="1">Q2: Urgent but not important</option>
                <option value="2">Q3: Not urgent but important</option>
                <option value="3">Q4: Neither urgent nor important</option>
              </select>
            </div>
            <!-- Reward Detail Field -->
            <div class="mb-3 ">
              <label class="form-label" for="planDetail">Reward Detail:</label>
              <input type="text" required class="form-control" id="rewardDetail">
            </div>
          </div>

          <!-- Modal Footer -->
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-primary">Add</button>
          </div>
        </form>

      </div>
    </div>
  </div>


  <!-- Bootstrap 5 JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

  <script>
    document.getElementById('taskForm').addEventListener('submit', async function(event) {
      event.preventDefault(); // Prevent the default form submission

      // Capture form values
      const taskDate = document.getElementById('taskDate').value;
      const planDetail = document.getElementById('planDetail').value;
      const startTime = document.getElementById('startTime').value;
      const endTime = document.getElementById('endTime').value;
      const priority = document.getElementById('inputPrioritySelect').value;
      const rewardDetail = document.getElementById('rewardDetail').value;

      // Create the data object to send
      const taskData = {
        date: taskDate,
        plan_detail: planDetail,
        timeRange: [startTime, endTime],
        priority: priority,
        rewardDetail: rewardDetail
      };

      try {
        // Send the data via a POST request to the server
        const response = await fetch('/todos/addTask', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json', // Send as JSON
          },
          body: JSON.stringify(taskData), // Send the data
        });

        if (response.ok) {
          const result = await response.json();
          console.log('Task added successfully:', result);
          // Optionally, you can reset the form or provide a success message
        } else {
          console.error('Failed to add task:', response.statusText);
        }
      } catch (error) {
        console.error('Error:', error);
      }
    });
  </script>
</body>

</html>